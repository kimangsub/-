{"ast":null,"code":"var _jsxFileName = \"D:\\\\kimangsub\\\\3.WEB\\\\work\\\\react-workspace\\\\-\\\\context-react-app\\\\src\\\\props_drilling\\\\UserContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useContext, useState } from \"react\";\n\n//새로운 Context 생성하기\n//createContext() : 하위 컴포넌트로 데이터를 전달하는 함수\n//UserContext : createContext()함수를 실행하고 반환된 객체를 담는 변수\n//이 객체는 제공(provider)하거나, 소비(consumer)할 수 있는 기능을 제공\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\n\n//Context의 Provider역할을 한다.\n//이 컴포넌트를 사용하면 하위 컴포넌트에서 UserContext를 사용할 수 있다.\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const [user, SetUser] = useState({\n    name: 'John Doe',\n    age: 30\n  });\n  return (\n    /*#__PURE__*/\n    //Provider는 Context에서 제공하는 특수한 컴포넌트로, 하위 컴포넌트들에게\n    //전역 상태를 전달하는 역할을 한다.\n    _jsxDEV(UserContext.Provider, {\n      value: {\n        user,\n        SetUser\n      },\n      children: [children, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(UserProvider, \"mQ3unOx9nRw8oe4R7VxZpSLpYBg=\");\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","user","SetUser","name","age","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/kimangsub/3.WEB/work/react-workspace/-/context-react-app/src/props_drilling/UserContext.js"],"sourcesContent":["import React, {createContext, useContext, useState} from \"react\";\r\n\r\n//새로운 Context 생성하기\r\n//createContext() : 하위 컴포넌트로 데이터를 전달하는 함수\r\n//UserContext : createContext()함수를 실행하고 반환된 객체를 담는 변수\r\n//이 객체는 제공(provider)하거나, 소비(consumer)할 수 있는 기능을 제공\r\nexport const UserContext = createContext();\r\n\r\n//Context의 Provider역할을 한다.\r\n//이 컴포넌트를 사용하면 하위 컴포넌트에서 UserContext를 사용할 수 있다.\r\nexport const UserProvider = ({children}) => {\r\n    const [user, SetUser] = useState({name : 'John Doe', age : 30});\r\n\r\n    return( \r\n        //Provider는 Context에서 제공하는 특수한 컴포넌트로, 하위 컴포넌트들에게\r\n        //전역 상태를 전달하는 역할을 한다.\r\n        <UserContext.Provider value={{user, SetUser}}>\r\n            {children} {/*UserProvider컴포넌트가 감싸고 있는 모든 하위 컴포넌트를 의미*/}\r\n        </UserContext.Provider>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAO,OAAO;;AAEhE;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;;AAE1C;AACA;AACA,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC;IAACS,IAAI,EAAG,UAAU;IAAEC,GAAG,EAAG;EAAE,CAAC,CAAC;EAE/D;IAAA;IACI;IACA;IACAR,OAAA,CAACC,WAAW,CAACQ,QAAQ;MAACC,KAAK,EAAE;QAACL,IAAI;QAAEC;MAAO,CAAE;MAAAH,QAAA,GACxCA,QAAQ,EAAC,GAAC;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO;EAAC;AAE/B,CAAC;AAAAV,EAAA,CAVYF,YAAY;AAAAa,EAAA,GAAZb,YAAY;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}