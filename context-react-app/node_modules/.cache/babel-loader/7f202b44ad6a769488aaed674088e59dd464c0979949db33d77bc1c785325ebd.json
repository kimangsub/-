{"ast":null,"code":"// import React, {createContext, useContext, useState} from \"react\";\n\n// //새로운 Context 생성하기\n// //createContext() : 하위 컴포넌트로 데이터를 전달하는 함수\n// //UserContext : createContext()함수를 실행하고 반환된 객체를 담는 변수\n// //이 객체는 제공(provider)하거나, 소비(consumer)할 수 있는 기능을 제공\n// export const UserContext = createContext();\n\n// //Context의 Provider역할을 한다.\n// //이 컴포넌트를 사용하면 하위 컴포넌트에서 UserContext를 사용할 수 있다.\n// export const UserProvider = ({children}) => {\n//     const [user, SetUser] = useState({name : 'John Doe', age : 30});\n\n//     return( \n//         //Provider는 Context에서 제공하는 특수한 컴포넌트로, 하위 컴포넌트들에게\n//         //전역 상태를 전달하는 역할을 한다.\n//         <UserContext.Provider value={{user, SetUser}}>\n//             {children} {/*UserProvider컴포넌트가 감싸고 있는 모든 하위 컴포넌트를 의미*/}\n//         </UserContext.Provider>\n//     )\n// }","map":{"version":3,"names":[],"sources":["D:/kimangsub/3.WEB/work/react-workspace/-/context-react-app/src/props_drilling/UserContext.js"],"sourcesContent":["// import React, {createContext, useContext, useState} from \"react\";\r\n\r\n// //새로운 Context 생성하기\r\n// //createContext() : 하위 컴포넌트로 데이터를 전달하는 함수\r\n// //UserContext : createContext()함수를 실행하고 반환된 객체를 담는 변수\r\n// //이 객체는 제공(provider)하거나, 소비(consumer)할 수 있는 기능을 제공\r\n// export const UserContext = createContext();\r\n\r\n// //Context의 Provider역할을 한다.\r\n// //이 컴포넌트를 사용하면 하위 컴포넌트에서 UserContext를 사용할 수 있다.\r\n// export const UserProvider = ({children}) => {\r\n//     const [user, SetUser] = useState({name : 'John Doe', age : 30});\r\n\r\n//     return( \r\n//         //Provider는 Context에서 제공하는 특수한 컴포넌트로, 하위 컴포넌트들에게\r\n//         //전역 상태를 전달하는 역할을 한다.\r\n//         <UserContext.Provider value={{user, SetUser}}>\r\n//             {children} {/*UserProvider컴포넌트가 감싸고 있는 모든 하위 컴포넌트를 의미*/}\r\n//         </UserContext.Provider>\r\n//     )\r\n// }"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}