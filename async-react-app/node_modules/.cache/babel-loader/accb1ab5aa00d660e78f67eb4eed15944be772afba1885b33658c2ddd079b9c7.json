{"ast":null,"code":"var _jsxFileName = \"D:\\\\kimangsub\\\\3.WEB\\\\work\\\\react-workspace\\\\-\\\\async-react-app\\\\src\\\\blog\\\\BlogApp.js\",\n  _s = $RefreshSig$();\n//블로그 애플리케이션 만들어보기\n//1. 게시물 조회\n//2. 게시물 추가\n//3. 게시물 삭제\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BlogApp() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [newPost, setNewPost] = useState({\n    title: '',\n    body: ''\n  });\n\n  //게시물 조회\n  //렌더링 될 때 무조건 한번은 실행\n  //서버로 가서 select를 해오는 것\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        //axios는 데이터를 가져와서 바로 json으로 만들어준다.\n        const response = await axios.get('https://jsonplaceholder.typicode.com/posts');\n        //비동기통신을 하고 얻은 데이터를 받으려면 변수명.data를 사용한다.\n        //console.log(response.data);\n        setPosts(response.data); //post state에 100개의 내용이 저장\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPosts();\n  }, []); //useEffect\n\n  //데이터 추가\n  //서버에 데이터를 추가하여 새로고침해도 추가된 데이터가 유지되도록 해보자\n  //DB로 가서 insert를 하는 것\n  const addPost = async () => {\n    //유효성 검사\n    if (!newPost.title || !newPost.body) return alert('모든 필드를 입력하세요');\n    try {\n      //조회할 때 HTTP메서드는 GET, 추가할 때 HTTP메서드는 POST를 사용한다.\n      const response = await axios.post('https://jsonplaceholder.typicode.com/posts', newPost);\n      setPosts([response.data, ...posts]); //재 렌더링이 되서 추가된 내용이 보임\n      //input태그와 textarea의 내용을 비워줘야 한다.\n      setNewPost({\n        title: '',\n        body: ''\n      });\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  //데이터 삭제하기\n  //DB로 가서 delete를 하는 것\n  const deletePost = async id => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/posts/1${id}`);\n      //내가 삭제한 게시글 빼고 다시 조회해줘\n      setPosts(posts.filter(post => post.id !== id));\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uC0C8 \\uAC8C\\uC2DC\\uBB3C \\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC81C\\uBAA9\",\n        value: newPost.title,\n        onChange: e => setNewPost({\n          ...newPost,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"\\uB0B4\\uC6A9\",\n        value: newPost.body,\n        onChange: e => setNewPost({\n          ...newPost,\n          body: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addPost,\n        children: \"\\uAC8C\\uC2DC\\uBB3C \\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uBE14\\uB85C\\uADF8 \\uAC8C\\uC2DC\\uBB3C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '1px solid black',\n          margin: '10px',\n          padding: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: deletePost,\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s(BlogApp, \"QkbcrkWft8Cc2id7Gr98jHVFIKE=\");\n_c = BlogApp;\nexport default BlogApp;\nvar _c;\n$RefreshReg$(_c, \"BlogApp\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","BlogApp","_s","posts","setPosts","loading","setLoading","error","setError","newPost","setNewPost","title","body","fetchPosts","response","get","data","err","message","addPost","alert","post","deletePost","id","delete","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","style","border","margin","padding","_c","$RefreshReg$"],"sources":["D:/kimangsub/3.WEB/work/react-workspace/-/async-react-app/src/blog/BlogApp.js"],"sourcesContent":["//블로그 애플리케이션 만들어보기\r\n//1. 게시물 조회\r\n//2. 게시물 추가\r\n//3. 게시물 삭제\r\n\r\nimport React, {useState, useEffect} from \"react\";\r\nimport axios from 'axios';\r\n\r\nfunction BlogApp(){\r\n    const [posts, setPosts] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [newPost, setNewPost] = useState({title : '', body : ''});\r\n\r\n    //게시물 조회\r\n    //렌더링 될 때 무조건 한번은 실행\r\n    //서버로 가서 select를 해오는 것\r\n    useEffect(() => {\r\n        const fetchPosts = async () => {\r\n            try{\r\n                //axios는 데이터를 가져와서 바로 json으로 만들어준다.\r\n                const response = await axios.get('https://jsonplaceholder.typicode.com/posts');\r\n                //비동기통신을 하고 얻은 데이터를 받으려면 변수명.data를 사용한다.\r\n                //console.log(response.data);\r\n                setPosts(response.data); //post state에 100개의 내용이 저장\r\n            } catch(err){\r\n                setError(err.message);\r\n            } finally{\r\n                setLoading(false);\r\n            }\r\n        };\r\n        fetchPosts();\r\n    }, []); //useEffect\r\n\r\n    //데이터 추가\r\n    //서버에 데이터를 추가하여 새로고침해도 추가된 데이터가 유지되도록 해보자\r\n    //DB로 가서 insert를 하는 것\r\n    const addPost = async () => {\r\n        //유효성 검사\r\n        if(!newPost.title || !newPost.body) return alert('모든 필드를 입력하세요');\r\n\r\n        try{\r\n            //조회할 때 HTTP메서드는 GET, 추가할 때 HTTP메서드는 POST를 사용한다.\r\n            const response = await axios.post('https://jsonplaceholder.typicode.com/posts', newPost);\r\n            setPosts([response.data, ...posts]); //재 렌더링이 되서 추가된 내용이 보임\r\n            //input태그와 textarea의 내용을 비워줘야 한다.\r\n            setNewPost({title : '', body : ''});\r\n        } catch(err){\r\n            setError(err.message);\r\n        }\r\n    }\r\n\r\n    //데이터 삭제하기\r\n    //DB로 가서 delete를 하는 것\r\n    const deletePost = async (id) => {\r\n        try{\r\n            await axios.delete(`https://jsonplaceholder.typicode.com/posts/1${id}`);\r\n            //내가 삭제한 게시글 빼고 다시 조회해줘\r\n            setPosts(posts.filter(post => post.id !== id));\r\n        } catch(err){\r\n            setError(err.message);\r\n        }\r\n    } \r\n\r\n    return(\r\n        <div>\r\n            {/* 게시글 추가하기 */}\r\n            <div>\r\n                <h1>새 게시물 추가</h1>\r\n                <input type=\"text\" placeholder=\"제목\" value={newPost.title} onChange={(e) => setNewPost({...newPost, title : e.target.value})} />\r\n                <textarea placeholder=\"내용\" value={newPost.body} onChange={(e) => setNewPost({...newPost, body : e.target.value})} />\r\n                <button onClick={addPost}>게시물 추가</button>\r\n            </div>\r\n            <div>\r\n                <h1>블로그 게시물</h1>\r\n                {/* post state에 저장되어 있는 내용을 하나씩 꺼내서 화면에 렌더링 */}\r\n                {posts.map(post => (\r\n                    <div key={post.id} style={{border : '1px solid black', margin : '10px', padding : '10px'}}>\r\n                        <h3>{post.title}</h3>\r\n                        <p>{post.body}</p>\r\n                        <button onClick={deletePost}>삭제</button>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}