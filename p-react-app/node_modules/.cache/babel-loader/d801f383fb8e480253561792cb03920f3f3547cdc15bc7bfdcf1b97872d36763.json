{"ast":null,"code":"var _jsxFileName = \"D:\\\\kimangsub\\\\3.WEB\\\\work\\\\react-workspace\\\\p-react-app\\\\src\\\\Product.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Products() {\n  _s();\n  //{categoryId : 1}\n  const {\n    categoryId\n  } = useParams();\n  const products = [{\n    id: 1,\n    name: '노트북',\n    categoryId: '1'\n  }, {\n    id: 2,\n    name: '스마트폰',\n    categoryId: '1'\n  }, {\n    id: 3,\n    name: '셔츠',\n    categoryId: '2'\n  }, {\n    id: 4,\n    name: '청바지',\n    categoryId: '2'\n  }, {\n    id: 5,\n    name: '사과',\n    categoryId: '3'\n  }, {\n    id: 6,\n    name: '우유',\n    categoryId: '3'\n  }];\n\n  //배열의 카테고리Id와 useParam으로 넘긴 카테고리Id가 일치하는 요소만 배열로 반환\n  const filterProducts = products.filter(product => product.categoryId === categoryId);\n\n  //카테고리에 맞는 제품들만 렌더링\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"\\uCE74\\uD14C\\uACE0\\uB9AC \", categoryId, \"\\uC758 \\uC0C1\\uD488 \\uBAA9\\uB85D\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filterProducts.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/categories/${categoryId}/products/${product.id}`,\n          children: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this)\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(Products, \"uXt040siUaSnUMYiz2dGTKaOKKE=\", false, function () {\n  return [useParams];\n});\n_c = Products;\nexport default Products;\nvar _c;\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"names":["React","useParams","Link","jsxDEV","_jsxDEV","Products","_s","categoryId","products","id","name","filterProducts","filter","product","children","fileName","_jsxFileName","lineNumber","columnNumber","map","to","_c","$RefreshReg$"],"sources":["D:/kimangsub/3.WEB/work/react-workspace/p-react-app/src/Product.js"],"sourcesContent":["import React from \"react\";\r\nimport {useParams, Link} from 'react-router-dom';\r\n\r\nfunction Products() {\r\n    //{categoryId : 1}\r\n    const{categoryId} = useParams();\r\n\r\n    const products = [\r\n        { id: 1, name: '노트북', categoryId: '1' },\r\n        { id: 2, name: '스마트폰', categoryId: '1' },\r\n        { id: 3, name: '셔츠', categoryId: '2' },\r\n        { id: 4, name: '청바지', categoryId: '2' },\r\n        { id: 5, name: '사과', categoryId: '3' },\r\n        { id: 6, name: '우유', categoryId: '3' },\r\n        ];\r\n\r\n    //배열의 카테고리Id와 useParam으로 넘긴 카테고리Id가 일치하는 요소만 배열로 반환\r\n    const filterProducts = products.filter(product => product.categoryId === categoryId)\r\n\r\n    //카테고리에 맞는 제품들만 렌더링\r\n    return(\r\n        <div>\r\n            <h1>카테고리 {categoryId}의 상품 목록</h1>\r\n            <ul>\r\n                {filterProducts.map(product => (\r\n                    <li key={product.id}>\r\n                        <Link to={`/categories/${categoryId}/products/${product.id}`}>{product.name}</Link>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Products;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,SAAS,EAAEC,IAAI,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB;EACA,MAAK;IAACC;EAAU,CAAC,GAAGN,SAAS,CAAC,CAAC;EAE/B,MAAMO,QAAQ,GAAG,CACb;IAAEC,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,KAAK;IAAEH,UAAU,EAAE;EAAI,CAAC,EACvC;IAAEE,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,MAAM;IAAEH,UAAU,EAAE;EAAI,CAAC,EACxC;IAAEE,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,IAAI;IAAEH,UAAU,EAAE;EAAI,CAAC,EACtC;IAAEE,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,KAAK;IAAEH,UAAU,EAAE;EAAI,CAAC,EACvC;IAAEE,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,IAAI;IAAEH,UAAU,EAAE;EAAI,CAAC,EACtC;IAAEE,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,IAAI;IAAEH,UAAU,EAAE;EAAI,CAAC,CACrC;;EAEL;EACA,MAAMI,cAAc,GAAGH,QAAQ,CAACI,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACN,UAAU,KAAKA,UAAU,CAAC;;EAEpF;EACA,oBACIH,OAAA;IAAAU,QAAA,gBACIV,OAAA;MAAAU,QAAA,GAAI,2BAAK,EAACP,UAAU,EAAC,kCAAO;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCd,OAAA;MAAAU,QAAA,EACKH,cAAc,CAACQ,GAAG,CAACN,OAAO,iBACvBT,OAAA;QAAAU,QAAA,eACIV,OAAA,CAACF,IAAI;UAACkB,EAAE,EAAE,eAAeb,UAAU,aAAaM,OAAO,CAACJ,EAAE,EAAG;UAAAK,QAAA,EAAED,OAAO,CAACH;QAAI;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC,GAD9EL,OAAO,CAACJ,EAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEf,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd;AAACZ,EAAA,CA7BQD,QAAQ;EAAA,QAEOJ,SAAS;AAAA;AAAAoB,EAAA,GAFxBhB,QAAQ;AA+BjB,eAAeA,QAAQ;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}